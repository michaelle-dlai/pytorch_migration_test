import pandas as pd
import torch

# Place the numerical data inside a Python list of lists
data_features = [[-1.5906e+00, -1.2407e+00,  0.0000e+00,  1.0000e+00],
                [ 4.7244e-01,  7.8214e-01,  1.0000e+00,  0.0000e+00],
                [-6.2642e-01, -1.2830e+00,  1.0000e+00,  0.0000e+00],
                [ 3.6126e-02,  6.1044e-01,  0.0000e+00,  1.0000e+00],
                [ 1.3971e+00, -1.1054e-03,  0.0000e+00,  0.0000e+00],
                [-8.4727e-01,  7.3274e-01,  0.0000e+00,  1.0000e+00],
                [-2.9784e-01, -2.8806e-01,  0.0000e+00,  0.0000e+00],
                [ 8.8002e-01, -4.0331e-01,  1.0000e+00,  0.0000e+00],
                [-9.1729e-01, -9.5370e-01,  0.0000e+00,  1.0000e+00],
                [-1.4362e+00,  2.2705e-01,  0.0000e+00,  0.0000e+00],
                [-7.0901e-01, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [-1.1489e+00, -9.7487e-01,  1.0000e+00,  0.0000e+00],
                [ 1.4725e+00,  3.2583e-01,  1.0000e+00,  0.0000e+00],
                [ 1.0578e+00,  1.3208e+00,  0.0000e+00,  0.0000e+00],
                [ 4.6166e-01, -1.2866e-02,  0.0000e+00,  0.0000e+00],
                [ 1.2750e+00,  1.2808e+00,  0.0000e+00,  1.0000e+00],
                [ 1.0434e+00,  4.1992e-01,  0.0000e+00,  0.0000e+00],
                [-1.0627e+00, -1.0290e+00,  0.0000e+00,  1.0000e+00],
                [ 1.3469e+00,  4.0580e-01,  0.0000e+00,  0.0000e+00],
                [ 1.4206e-01, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 1.0560e+00, -1.2124e+00,  0.0000e+00,  1.0000e+00],
                [ 1.3594e+00, -9.3723e-01,  0.0000e+00,  1.0000e+00],
                [-6.1385e-01, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [-1.3231e+00, -8.8784e-01,  0.0000e+00,  1.0000e+00],
                [-9.2088e-01,  1.4384e+00,  0.0000e+00,  0.0000e+00],
                [-2.4038e-01, -1.2477e+00,  1.0000e+00,  0.0000e+00],
                [ 1.0919e+00, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 1.2373e+00, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [-1.6750e+00,  8.5270e-01,  0.0000e+00,  1.0000e+00],
                [ 4.3308e-02, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [-2.7450e-01, -8.6432e-01,  0.0000e+00,  1.0000e+00],
                [-9.4063e-01,  1.4925e+00,  0.0000e+00,  0.0000e+00],
                [-1.2890e+00, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [-5.4742e-01, -1.0930e-01,  1.0000e+00,  0.0000e+00],
                [ 1.5192e+00,  9.4913e-01,  1.0000e+00,  0.0000e+00],
                [-5.9590e-01,  1.4266e+00,  1.0000e+00,  0.0000e+00],
                [ 7.2036e-02, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 7.0047e-01,  1.1538e+00,  0.0000e+00,  1.0000e+00],
                [-4.5764e-01,  1.0003e-01,  0.0000e+00,  0.0000e+00],
                [ 1.6162e+00, -6.8086e-01,  0.0000e+00,  0.0000e+00],
                [ 1.5857e+00,  1.3090e+00,  0.0000e+00,  0.0000e+00],
                [-8.4008e-01, -1.2124e+00,  0.0000e+00,  1.0000e+00],
                [-1.5801e-03, -6.8556e-01,  0.0000e+00,  0.0000e+00],
                [-6.7131e-01,  7.9155e-01,  1.0000e+00,  0.0000e+00],
                [-7.2697e-01,  3.0466e-01,  0.0000e+00,  0.0000e+00],
                [-1.5727e+00,  1.0009e+00,  0.0000e+00,  1.0000e+00],
                [ 3.8086e-01,  1.1044e+00,  0.0000e+00,  1.0000e+00],
                [ 1.6375e-02,  1.0503e+00,  0.0000e+00,  1.0000e+00],
                [-1.5224e+00,  1.0573e+00,  0.0000e+00,  1.0000e+00],
                [-7.4851e-01,  3.0937e-01,  0.0000e+00,  0.0000e+00],
                [ 1.4007e+00, -3.1682e-02,  1.0000e+00,  0.0000e+00],
                [-8.8138e-01,  1.7295e-01,  1.0000e+00,  0.0000e+00],
                [-1.2046e+00,  3.2583e-01,  1.0000e+00,  0.0000e+00],
                [-2.8513e-02, -3.3980e-01,  1.0000e+00,  0.0000e+00],
                [ 1.6647e+00,  4.7166e-01,  0.0000e+00,  0.0000e+00],
                [-8.7240e-01,  1.3302e+00,  1.0000e+00,  0.0000e+00],
                [ 5.9453e-01, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 8.9977e-01,  1.3090e+00,  0.0000e+00,  0.0000e+00],
                [-8.8677e-01, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 7.8665e-01,  1.3513e+00,  0.0000e+00,  0.0000e+00],
                [-4.4328e-01, -1.0031e+00,  0.0000e+00,  1.0000e+00],
                [ 4.5807e-01,  8.7152e-01,  0.0000e+00,  1.0000e+00],
                [ 4.6346e-01, -1.1818e+00,  1.0000e+00,  0.0000e+00],
                [ 1.2949e-01,  1.2243e+00,  0.0000e+00,  1.0000e+00],
                [-1.3895e+00,  5.0459e-01,  0.0000e+00,  0.0000e+00],
                [ 1.1511e+00, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [-6.0487e-01, -9.5189e-02,  0.0000e+00,  0.0000e+00],
                [-1.0627e+00,  7.6567e-01,  1.0000e+00,  0.0000e+00],
                [-1.5601e+00,  1.6589e-01,  0.0000e+00,  0.0000e+00],
                [ 3.1802e-01,  9.9382e-01,  1.0000e+00,  0.0000e+00],
                [ 6.1249e-01, -3.0923e-01,  1.0000e+00,  0.0000e+00],
                [-1.6409e+00,  1.3678e+00,  0.0000e+00,  0.0000e+00],
                [ 4.8694e-02, -8.5780e-02,  0.0000e+00,  0.0000e+00],
                [-9.2627e-01,  5.0640e-02,  1.0000e+00,  0.0000e+00],
                [ 5.0296e-01,  1.4454e+00,  0.0000e+00,  0.0000e+00],
                [-1.1040e+00,  1.7295e-01,  1.0000e+00,  0.0000e+00],
                [ 6.5917e-01, -1.2877e+00,  1.0000e+00,  0.0000e+00],
                [-3.7864e-01,  9.4208e-01,  0.0000e+00,  1.0000e+00],
                [ 1.4977e+00,  4.3873e-01,  0.0000e+00,  0.0000e+00],
                [-1.2297e+00,  1.4101e+00,  0.0000e+00,  0.0000e+00],
                [-5.3485e-01, -9.8663e-01,  1.0000e+00,  0.0000e+00],
                [-1.3105e+00, -9.6311e-01,  0.0000e+00,  1.0000e+00],
                [ 1.4564e+00, -1.2853e+00,  0.0000e+00,  1.0000e+00],
                [ 1.2948e+00,  6.5983e-01,  0.0000e+00,  1.0000e+00],
                [-8.1854e-01,  5.7986e-01,  0.0000e+00,  0.0000e+00],
                [ 5.5323e-01,  1.4807e+00,  0.0000e+00,  0.0000e+00],
                [ 1.0901e+00,  1.6589e-01,  1.0000e+00,  0.0000e+00],
                [ 1.9593e-01,  1.3067e+00,  0.0000e+00,  0.0000e+00],
                [ 1.0795e-01, -6.1970e-01,  1.0000e+00,  0.0000e+00],
                [-8.7240e-01, -1.1348e+00,  0.0000e+00,  1.0000e+00],
                [-1.3805e+00, -9.8192e-01,  0.0000e+00,  1.0000e+00],
                [ 1.3630e+00,  1.0385e+00,  0.0000e+00,  1.0000e+00],
                [ 1.3738e+00, -9.8192e-01,  1.0000e+00,  0.0000e+00],
                [ 4.6166e-01, -1.1771e+00,  0.0000e+00,  1.0000e+00],
                [-5.4203e-01, -1.2877e+00,  1.0000e+00,  0.0000e+00],
                [-5.0791e-01,  7.1863e-01,  0.0000e+00,  1.0000e+00],
                [ 7.7767e-01, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 1.3630e+00, -1.2877e+00,  0.0000e+00,  1.0000e+00],
                [ 1.3271e+00,  1.3843e+00,  0.0000e+00,  0.0000e+00],
                [ 9.6261e-01,  1.4219e+00,  0.0000e+00,  0.0000e+00]]



data_targets = [[ 7.2200],
                [32.4100],
                [17.4700],
                [37.1700],
                [38.3600],
                [29.0600],
                [23.9400],
                [32.4000],
                [17.0600],
                [14.0900],
                [33.3800],
                [17.3800],
                [36.7500],
                [38.8600],
                [32.5500],
                [61.8700],
                [38.0800],
                [24.1200],
                [43.2100],
                [41.0300],
                [59.6100],
                [70.4600],
                [31.5500],
                [ 9.0600],
                [ 8.2900],
                [21.1800],
                [61.1300],
                [64.8400],
                [ 7.7300],
                [45.4200],
                [36.5700],
                [16.2400],
                [12.4400],
                [ 8.2500],
                [42.4200],
                [24.2800],
                [41.9700],
                [56.0000],
                [21.7900],
                [48.9500],
                [46.2400],
                [26.7300],
                [26.0600],
                [17.2700],
                [13.5100],
                [ 9.8000],
                [51.6900],
                [41.2300],
                [12.0600],
                [14.0600],
                [39.2000],
                [10.6100],
                [12.6300],
                [22.9800],
                [39.2200],
                [18.2900],
                [52.7100],
                [41.5200],
                [28.7400],
                [32.0300],
                [30.5800],
                [47.0300],
                [23.7100],
                [42.8600],
                [14.7600],
                [58.3000],
                [21.7500],
                [15.4800],
                [10.2100],
                [29.2100],
                [26.6600],
                [ 9.9200],
                [24.8100],
                [ 7.1700],
                [31.6900],
                [10.2300],
                [34.5100],
                [33.3600],
                [42.7300],
                [13.3900],
                [17.6600],
                [15.7300],
                [72.5200],
                [63.6400],
                [14.7000],
                [29.1800],
                [39.0600],
                [25.9900],
                [24.4800],
                [22.7800],
                [13.7700],
                [65.9500],
                [38.9800],
                [47.4800],
                [14.3400],
                [30.0500],
                [54.3800],
                [64.1400],
                [39.7400],
                [31.6500]]


# Convert the list to a PyTorch tensor and assign it to the 'features' variable
features = torch.tensor(data_features, dtype=torch.float32)

# Convert the Python list to a PyTorch tensor and store it in the 'targets' variable
targets = torch.tensor(data_targets, dtype=torch.float32)



def load_rows(path_to_csv, row_range=(50, 59)):
    """
    Loads a CSV file and returns a specific range of rows.

    Args:
    path_to_csv (str): The file path to the CSV.
    row_range (tuple): A tuple of two integers (start, end) 
                         specifying the inclusive row range to load.

    Returns:
    pd.DataFrame: A pandas DataFrame containing the specified rows.
    """
    # Unpack the start and end from the range tuple
    start_row, end_row = row_range

    # Load the entire CSV file into a DataFrame
    df = pd.read_csv(path_to_csv)

    # Select rows using .iloc for integer-location based indexing.
    # Add 1 to the end_row to make the slice inclusive.
    selected_df = df.iloc[start_row:end_row + 1]

    return selected_df